@model IEnumerable<Beta_System.Models.C_nomina_beta_d_areas>

<style>
    .table tbody tr {
        height: 2px;
        min-height: 2px;
    }
</style>

@if (Model.Count() > 0)
{
    int no_empleados = (int)Model.Sum(x => x.no_empleados);
    int modo = ViewBag.modo;
    string clase = "";
    if (modo == 1 || no_empleados >= 27) { clase = "page-break"; }

    List<Beta_System.Models.C_nomina_conceptos> conceptos = Session["ConceptosNominaFormato"] as List<Beta_System.Models.C_nomina_conceptos>;
    DateTime nomina_inicio = (DateTime)Model.FirstOrDefault().C_nomina_beta_g.fecha_inicio;
    DateTime nomina_fin = (DateTime)Model.FirstOrDefault().C_nomina_beta_g.fecha_fin;

    var nomina_g = Model.FirstOrDefault().C_nomina_beta_g;
    decimal importe_final_nomina = 0;
    foreach (var area in Model)
    {
        decimal importe_area = (decimal)area.C_nomina_beta_d_areas_empleados.Sum(x => x.importe_final);
        importe_final_nomina += importe_area;
    }


    <table class="table table-sm table-condensed small table-bordered pdf-table pdf-content @clase">
        @foreach (var nomina_area in Model.GroupBy(x => x.id_departamento).OrderBy(x => x.FirstOrDefault().C_nomina_departamentos.nombre_departamento))
        {
            int colspan = conceptos.Count() + 1 + 9;
            <tr class="text-left">
                <td colspan="@colspan.ToString()" class="headerDepartamento">@nomina_area.FirstOrDefault().C_nomina_departamentos.nombre_departamento</td>
            </tr>

            <tr class="text-center bg-dark text-white" style="font-size: 12px; padding: 0px;">
                <th class="headerConcepto">ID</th>
                <th class="headerConcepto" style="width:25%;min-width:25%;">Empleado</th>
                <th class="headerConcepto">Puesto</th>
                <th class="headerConcepto">NSS</th>
                <th class="headerConcepto">Cuenta</th>
                <th class="headerConcepto">Días</th>
                <th class="headerConcepto">Salario diario</th>
                <th class="headerConcepto">S N</th>
                <th class="headerConcepto">7mo Dia</th>
                @foreach (var concepto in conceptos)
                {
                    <th class="headerConcepto" style="width:5%;min-width:5%;">@concepto.nombre_concepto</th>
                }
                <th class="headerConcepto">PERCEP</th>
            </tr>
            foreach (var nomina_empleado in nomina_area.FirstOrDefault().C_nomina_beta_d_areas_empleados.OrderBy(x => x.C_nomina_empleados.Nombres))
            {
                decimal sueldo_normal = (decimal)nomina_empleado.dias_laborados * (decimal)nomina_empleado.salario_diario;
                decimal septimo_dia = sueldo_normal / 6;
                <tr style="font-size:10px; padding:0px;">
                    <td>@nomina_empleado.C_nomina_empleados.Numero</td>
                    <td style="width:25%;min-width:25%;" class="text-left">@nomina_empleado.C_nomina_empleados.Nombres @nomina_empleado.C_nomina_empleados.Apellido_paterno @nomina_empleado.C_nomina_empleados.Apellido_materno</td>
                    <td>@nomina_empleado.C_nomina_puestos.nombre_puesto.Replace("?", "Ñ")</td>
                    <td class="text-left">@nomina_empleado.nss</td>
                    <td class="text-left">@nomina_empleado.cuenta_bancaria</td>
                    <td class="text-center">@nomina_empleado.dias_laborados</td>
                    <td class="text-center">@nomina_empleado.salario_diario.Value.ToString("#,##0.00")</td>
                    <td class="text-center">@sueldo_normal.ToString("#,##0.00")</td>
                    <td class="text-center">@septimo_dia.ToString("#,##0.00")</td>
                    @foreach (var concepto in conceptos)
                    {
                        var valid_concepto = nomina_empleado.C_nomina_beta_d_areas_empleados_conceptos.Where(x => x.id_nomina_d_area_empleado == nomina_empleado.id_nomina_d_area_empleado && x.id_concepto_nomina == concepto.id_concepto_nomina).FirstOrDefault();
                        if (valid_concepto != null)
                        {
                            string clave_concepto = valid_concepto.C_nomina_conceptos.clave_concepto;
                            decimal valor_salario = (decimal)valid_concepto.valor * (decimal)nomina_empleado.salario_diario;
                            string monoto_valor = "$" + valid_concepto.valor.Value.ToString("N2");
                            string valor_concepto = valid_concepto.valor.Value.ToString("N2");

                            if (clave_concepto == "102" || clave_concepto == "101" || clave_concepto == "DIA" || clave_concepto == "des")
                            { <td>@monoto_valor</td> }
                            else{ <td>@valor_concepto</td> }
                        }
                        else
                        {
                            <td style="width:5%;min-width:5%;"></td>
                        }

                    }
                    <td style="width:5%;min-width:5%;" class="text-center">@nomina_empleado.importe_final.Value.ToString("N2")</td>
                </tr>
            }
        }
    </table>

}



